<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
 
    <!-- 引入redis配置 --> 
    <context:property-placeholder location="classpath*:redis.properties" ignore-unresolvable="true"/> 
    <!-- <bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean> -->
    <!-- Redis 连接池 配置 --> 
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
        <property name="maxTotal" value="${redis.pool.maxTotal}" /> 
        <property name="maxIdle" value="${redis.pool.maxIdle}" /> 
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" /> 
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" /> 
        <property name="testOnReturn" value="true" />
    </bean> 
    <!-- redis单节点数据库连接配置服务中心 --> 
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> 
        <property name="hostName" value="${redis.ip}" /> 
        <property name="port" value="${redis.port}" /> 
        <property name="password" value="${redis.password}" /> 
        <property name="poolConfig" ref="jedisPoolConfig" /> 
    </bean> 
    <!-- redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷 --> 
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> 
        <property name="connectionFactory" ref="jedisConnectionFactory" /> 
        <!--     如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！-->  
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
        <property name="valueSerializer">  
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
        </property>
    </bean> 
<!--     <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" /> -->

</beans>